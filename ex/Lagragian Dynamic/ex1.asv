clear all
clc

% Define symbolic variables
syms g0           real
syms q1 q2 q3     real
syms m1 m2 m3     real
syms l1 l2 l3     real
syms rcx1 rcy1 rcx2 rcy2 rcx3 rcy3 real

% Gravity vector along the x0 axis (pointing downward),
% as stated in the text (g0, 0, 0)^T.
g_0 = [g0; 0; 0]; 

% Define the sine and cosine terms:
% s1 = sin(q1), c1 = cos(q1)
% s12 = sin(q1+q2), c12 = cos(q1+q2)
% s123 = sin(q1+q2+q3), c123 = cos(q1+q2+q3)
s1   = sin(q1);     
c1   = cos(q1);
s12  = sin(q1+q2);  
c12  = cos(q1+q2);
s123 = sin(q1+q2+q3);  
c123 = cos(q1+q2+q3);

% -------------------------
% Potential Energy Expressions:
% Ui = - m_i * g0^T * r_ci
% but with g0 = [g0; 0; 0], we get (positive sign) m_i*g0 * [some expression].
% -------------------------

% Link 1:
% U1 = m1*g0*( rcy1*s1 - (l1 + rcx1)*c1 )
U1 = m1 * g0 * ( rcy1*s1 - (l1 + rcx1)*c1 );

% Link 2:
% U2 = m2*g0*( rcy2*s12 - (l2 + rcx2)*c12 - l1*c1 )
U2 = m2 * g0 * ( rcy2*s12 - (l2 + rcx2)*c12 - l1*c1 );

% Link 3:
% U3 = m3*g0*( rcy3*s123 - (l3 + rcx3)*c123 - l2*c12 - l1*c1 )
U3 = m3 * g0 * ( rcy3*s123 - (l3 + rcx3)*c123 - l2*c12 - l1*c1 );

% Display the results
disp('U1 = ');
disp(U1);

disp('U2 = ');
disp(U2);

disp('U3 = ');
disp(U3);

% Optionally, to print in a more readable format:
% pretty(U1)
% pretty(U2)
% pretty(U3)
